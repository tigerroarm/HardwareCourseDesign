/*
 * screen.c
 *
 *  Created on: 2019年4月26日
 *      Author: 12757
 */

#include "screen_type.h"
#include "screen.h"

//整个屏幕变量
ScreenContainer tftlcdScreenInst;

char *str1 = "Happy";

//设置区域范围
void setAreaRange( AreaRange *areaPtr, short x_min, short x_max, short y_min, short y_max )
{
	areaPtr->x_min = x_min;
	areaPtr->x_max = x_max;
	areaPtr->y_min = y_min;
	areaPtr->y_max = y_max;
}

//初始化
void screenInit()
{
	//以下子模块宽度都相同 ( 1 ≤ x ≤ SCR_WIDE )


	//初始化屏幕总体尺寸 ( 1 ≤ y ≤ SCR_HEIGHT )
	setAreaRange( &(tftlcdScreenInst.screenArea), 1, SCR_WIDTH, 1, SCR_HEIGHT );

	//1.初始化顶栏 ( 1 ≤ y ≤ headerHeight )
	short headerHeight = 40;//顶栏高度 (
	setAreaRange( &(tftlcdScreenInst.headerArea), 1, SCR_WIDTH, 1, headerHeight );

	screenHeaderInit( &(tftlcdScreenInst.scrHeader), SCR_WIDTH, headerHeight );

	//2.初始化底栏 ( SCR_HEIGHT - footerHeight + 1 ≤ y ≤ SCR_HEIGHT )
	short footerHeight = 60;//底栏高度
	setAreaRange( &(tftlcdScreenInst.headerArea), 1, SCR_WIDTH, SCR_HEIGHT - footerHeight + 1, SCR_HEIGHT );

	screenFooterInit( &(tftlcdScreenInst.scrFooter) );

	//3.初始化主栏  ( headerHeight + 1 ≤ y ≤ SCR_HEIGHT - footerHeight )
	short mainAreaHeight = SCR_HEIGHT - headerHeight - footerHeight;
	setAreaRange( &(tftlcdScreenInst.mainArea), 1, SCR_WIDTH, headerHeight + 1, SCR_HEIGHT - footerHeight );

	screenMainHomeInit( &(tftlcdScreenInst.scrHome) );
	screenMainBookInit( &(tftlcdScreenInst.scrBook) );
	screenMainSettingInit( &(tftlcdScreenInst.scrSetting) );
	screenMainColorPickerInit( &(tftlcdScreenInst.scrColorPicker) );

	//4.初始化主栏页面信息
	screenMainAreaInfo( &(tftlcdScreenInst.mainAreaInfo) );

}

void screenHeaderInit( ScreenHeaderTime *scrHeaderInst, short width, short height )
{
	scrHeaderInst->borderVisible = true;
	scrHeaderInst->bkgColor = DEFAULT_BKG_COLOR;
	scrHeaderInst->borderColor = DEFAULT_BORDER_COLOR;

	short marginX = 100;
	short marginY = 5;

	setAreaRange( &(scrHeaderInst->tagTimeArea), marginX-1, width-marginX, marginY-1, height-marginY );

	scrHeaderInst->timeHour = 0;
	scrHeaderInst->timeMinute = 0;
	scrHeaderInst->timeSecond = 0;
}
void screenFooterInit( ScreenFooterBtn *scrFooterInst )
{

}

void screenMainHomeInit( ScreenHome *scrHomeInst )
{

}
void screenMainBookInit( ScreenBook *scrBookInst )
{

}
void screenMainSettingInit( ScreenSetting *scrSettingInst )
{

}
void screenMainColorPickerInit( ScreenColorPicker *scrColorPickerInst )
{

}

void screenMainAreaInfo( ScrMainAreaInfo *mainAreaInfoInst )
{
	//设置当前页面为第一页
	mainAreaInfoInst->curScrIndex = 0;
	//设置第一页为主页
	(mainAreaInfoInst->scrIDStack)[0] = SCR_HOME;
	//清空后面的栈页（即后面不存在栈页）
	for ( int i = 1; i < 4; i ++ )
	{
		(mainAreaInfoInst->scrIDStack)[i] = SCR_NONE;
	}
}

