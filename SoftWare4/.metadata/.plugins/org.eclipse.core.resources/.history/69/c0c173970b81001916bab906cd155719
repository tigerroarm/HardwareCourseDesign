/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "alt_types.h"
#include "unistd.h"


int main()
{
	LCD_init();

	LCD_WR_REG(0xD4);
	id=LCD_RD_DATA();	//dummy read
 	id=LCD_RD_DATA();	//读到0X00
  	id=LCD_RD_DATA();   	//读取93
 	id<<=8;
	id|=LCD_RD_DATA();  	//读取41
	printf("id =  %x \n",id);
	Display_init();

	LCD_Display_Dir(0);		 	//默认为竖屏
	LCD_Clear(0x1763);

	LCD_DrawLine(0,30,100,100);

	int i,j;
	while(1)
	{
		for (i=0; i< 100; i++){
			for(j=0;  j< 100; j++){
				LCD_DrawPoint(i,j);
			}
		}
	}





  return 0;
}

//返回值:读到的数据
alt_u16 LCD_ReadReg(alt_u16 LCD_Reg)
{
	LCD_WR_REG(LCD_Reg);		//写入要读的寄存器序号
	delay(1000);
	return LCD_RD_DATA();		//返回读到的值
}

void LCD_init()
{
	usleep(100000);
    alt_u8 data = 0x4 | 0x0 | 0x1;
    IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_BASE_CTRL_BASE, data);
    usleep(10000);
    data = 0x4 | 0x2 | 0x0;
    IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_BASE_CTRL_BASE, data);
    usleep(10000);


	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_BASE_CTRL_BASE, 0xffff); //默认设置out
	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_CMD_BASE, 0xffff); //默认设置out
	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_DATA_BASE , 0xffff); //默认设置out
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x4|0x2|0x1); //写使能 读写命令
}

//读数据
int sleepTime = 0;
alt_u16 LCD_RD_DATA()
{
	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_DATA_BASE, 0x0000); //data设置为输入
//	delay(sleepTime);
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x0|0x2|0x1); //读使能 来个低电平 读数据
//	delay(sleepTime);
	alt_u16 data =  IORD_ALTERA_AVALON_PIO_DATA(TFTLCD_DATA_BASE); //读出数据
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x4|0x2|0x1); //读使能  读数据
//	delay(sleepTime);
	return data;
}

//写LCD数据
void LCD_WR_REG(alt_u16 cmd)
{
	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_DATA_BASE, 0xffff); //data设置为输出
//	delay(sleepTime);
	// 写RS
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x4|0x0|0x0); //写使能 来个低电平 写命令
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_DATA_BASE, cmd); // 写命令
//	delay(sleepTime);
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x4|0x0|0x1); //来个高电平送数据
//	delay(sleepTime);
}

void LCD_WR_DATA(alt_u16 data)
{
	IOWR_ALTERA_AVALON_PIO_DIRECTION(TFTLCD_DATA_BASE , 0xffff); //data设置为输出
//	delay(sleepTime);
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE,0x4|0x2|0x0); //写使能 来个低电平 写数据
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_DATA_BASE, data); // 写数据
//	delay(sleepTime);
	IOWR_ALTERA_AVALON_PIO_DATA(TFTLCD_CMD_BASE, 0x4|0x2|0x1); //来个高电平送数据
//	delay(sleepTime);
}

void Display_init()
{
	LCD_WR_REG(0xED);
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0xFE);

	LCD_WR_REG(0xEE);
	LCD_WR_DATA(0xDE);
	LCD_WR_DATA(0x21);

	LCD_WR_REG(0xF1);
	LCD_WR_DATA(0x01);
	LCD_WR_REG(0xDF);
	LCD_WR_DATA(0x10);

	//VCOMvoltage//
	LCD_WR_REG(0xC4);
	LCD_WR_DATA(0x8F);	  //5f

	LCD_WR_REG(0xC6);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xE2);
	LCD_WR_DATA(0xE2);
	LCD_WR_DATA(0xE2);
	LCD_WR_REG(0xBF);
	LCD_WR_DATA(0xAA);

	LCD_WR_REG(0xB0);
	LCD_WR_DATA(0x0D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x0D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x11);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x19);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x21);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x5D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x5D);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB1);
	LCD_WR_DATA(0x80);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x8B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x96);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x02);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x03);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB4);
	LCD_WR_DATA(0x8B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x96);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA1);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB5);
	LCD_WR_DATA(0x02);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x03);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x04);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB6);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3F);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x5E);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x64);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x8C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xAC);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDC);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x70);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x90);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xEB);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDC);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xB8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xBA);
	LCD_WR_DATA(0x24);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC1);
	LCD_WR_DATA(0x20);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x54);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xFF);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC2);
	LCD_WR_DATA(0x0A);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x04);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC3);
	LCD_WR_DATA(0x3C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3A);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x39);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x37);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x36);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x32);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2F);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x29);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x26);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x24);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x24);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x23);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x36);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x32);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2F);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x29);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x26);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x24);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x24);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x23);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC4);
	LCD_WR_DATA(0x62);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x05);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x84);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF0);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x18);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA4);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x18);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x50);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x0C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x17);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x95);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xE6);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC5);
	LCD_WR_DATA(0x32);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x65);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x76);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC6);
	LCD_WR_DATA(0x20);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x17);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xC9);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE0);
	LCD_WR_DATA(0x16);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x1C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x21);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x36);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x46);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x52);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x64);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x7A);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x8B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB9);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC4);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xCA);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD9);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xE0);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE1);
	LCD_WR_DATA(0x16);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x1C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x22);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x36);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x45);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x52);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x64);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x7A);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x8B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB9);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC4);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xCA);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xE0);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE2);
	LCD_WR_DATA(0x05);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x0B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x1B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x34);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x4F);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x61);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x79);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x97);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA6);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD1);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD6);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDD);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);
	LCD_WR_REG(0xE3);
	LCD_WR_DATA(0x05);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x1C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x33);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x50);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x62);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x78);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x97);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA6);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC7);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD1);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD5);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDD);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE4);
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x02);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x2A);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x4B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x5D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x74);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x84);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x93);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xBE);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC4);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xCD);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDD);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);
	LCD_WR_REG(0xE5);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x02);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x29);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x3C);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x4B);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x5D);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x74);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x84);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x93);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xA2);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xB3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xBE);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xC4);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xCD);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xD3);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xDC);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xF3);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE6);
	LCD_WR_DATA(0x11);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x34);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x56);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x76);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x77);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x66);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xBB);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x66);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x45);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x43);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE7);
	LCD_WR_DATA(0x32);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x76);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x66);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x67);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x67);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x87);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xBB);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x77);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x56);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x23);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x33);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x45);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE8);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x87);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x77);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x66);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x88);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xAA);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0xBB);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x99);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x66);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x44);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x55);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xE9);
	LCD_WR_DATA(0xAA);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0x00);
	LCD_WR_DATA(0xAA);

	LCD_WR_REG(0xCF);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xF0);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x50);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xF3);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0xF9);
	LCD_WR_DATA(0x06);
	LCD_WR_DATA(0x10);
	LCD_WR_DATA(0x29);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0x3A);
	LCD_WR_DATA(0x55);	//66

	LCD_WR_REG(0x11);
	usleep(100000);
	LCD_WR_REG(0x29);
	LCD_WR_REG(0x35);
	LCD_WR_DATA(0x00);

	LCD_WR_REG(0x51);
	LCD_WR_DATA(0xFF);
	LCD_WR_REG(0x53);
	LCD_WR_DATA(0x2C);
	LCD_WR_REG(0x55);
	LCD_WR_DATA(0x82);
	LCD_WR_REG(0x2c);
}

void LCD_SetCursor(alt_u16 Xpos, alt_u16 Ypos)
{
	LCD_WR_REG(0x2a);
	LCD_WR_DATA(Xpos>>8);
	LCD_WR_DATA(Xpos&0xff);
	LCD_WR_REG(0x2b);
	LCD_WR_DATA(Ypos>>8);
	LCD_WR_DATA(Ypos&0xff);
}

//画点
//x,y:坐标
//POINT_COLOR:此点的颜色
void LCD_DrawPoint(alt_u16 x,alt_u16 y)
{
	LCD_SetCursor(x,y);		//设置光标位置
	LCD_WriteRAM_Prepare();	//开始写入GRAM
	LCD_WR_DATA(0x1234);
}

void LCD_Fast_DrawPoint(alt_u16 x,alt_u16 y,alt_u16 color)
{
	LCD_WR_REG(0x2a);
	LCD_WR_DATA(x>>8);
	LCD_WR_DATA(x&0xff);
	LCD_WR_REG(0x2b);
	LCD_WR_DATA(y>>8);
	LCD_WR_DATA(y&0xff);
	LCD_WriteRAM_Prepare();	//开始写入GRAM
	LCD_WR_DATA(color);
}

void LCD_WriteRAM_Prepare()
{
	LCD_WR_REG(0x2c);
}

void LCD_DrawLine(alt_u16 x1, alt_u16 y1, alt_u16 x2, alt_u16 y2)
{
	alt_u16 t;
	int xerr=0,yerr=0,delta_x,delta_y,distance;
	int incx,incy,uRow,uCol;
	delta_x=x2-x1; //计算坐标增量
	delta_y=y2-y1;
	uRow=x1;
	uCol=y1;
	if(delta_x>0)incx=1; //设置单步方向
	else if(delta_x==0)incx=0;//垂直线
	else {incx=-1;delta_x=-delta_x;}
	if(delta_y>0)incy=1;
	else if(delta_y==0)incy=0;//水平线
	else{incy=-1;delta_y=-delta_y;}
	if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴
	else distance=delta_y;
	for(t=0;t<=distance+1;t++ )//画线输出
	{
		LCD_DrawPoint(uRow,uCol);//画点
		xerr+=delta_x ;
		yerr+=delta_y ;
		if(xerr>distance)
		{
			xerr-=distance;
			uRow+=incx;
		}
		if(yerr>distance)
		{
			yerr-=distance;
			uCol+=incy;
		}
	}
}

//设置竖屏
void LCD_Display_Dir(alt_u8 dir)
{
	globe_dir = dir;
}

void LCD_Color_Fill(alt_u16 sx,alt_u16 sy,alt_u16 ex,alt_u16 ey)
{
	alt_u16 height,width;
	alt_u16 i,j;
	width=ex-sx+1; 			//得到填充的宽度
	height=ey-sy+1;			//高度
 	for(i=0;i<height;i++)
	{
 		LCD_SetCursor(sx,sy+i);   	//设置光标位置
		LCD_WriteRAM_Prepare();     //开始写入GRAM
		for(j=0;j<width;j++)
			LCD_WR_DATA(0x0f);//写入数据
	}
}


void delay(int time){
	int i;
	for(i=0; i<time; i++);
}

void LCD_Scan_Dir(alt_u8 dir)
{
	alt_u16 regval=0;
	alt_u16 dirreg=0;
	alt_u16 temp;

	regval|=(0<<7)|(0<<6)|(0<<5);
	dirreg=0x36;
	//LCD_WriteReg(dirreg,regval);
	LCD_WR_REG(dirreg);
	LCD_WR_DATA(regval);

	if(id!=0x1963)//1963不做坐标处理
	{
		if(regval&0X20)
		{
			if(width<height)//交换X,Y
			{
				temp=width;
				width=height;
				height=temp;
			}
		}else{
			if(width>height)//交换X,Y
			{
				temp=width;
				width=height;
				height=temp;
			}
		}
	}

	LCD_WR_REG(0x2a);
	LCD_WR_DATA(0);LCD_WR_DATA(0);
	LCD_WR_DATA((width-1)>>8);LCD_WR_DATA((width-1)&0xFF);
	LCD_WR_REG(0x2b);
	LCD_WR_DATA(0);LCD_WR_DATA(0);
	LCD_WR_DATA((height-1)>>8);LCD_WR_DATA((height-1)&0XFF);

}

void LCD_Clear(alt_u16 color)
{
	alt_u32 index=0;
	alt_u32 totalpoint=width;
	totalpoint*=height; 			//得到总点数
	LCD_SetCursor(0x00,0x0000);	//设置光标位置
	LCD_WriteRAM_Prepare();     		//开始写入GRAM
	for(index=0;index<totalpoint;index++)
	{
		LCD_WR_DATA(color);
	}
}
