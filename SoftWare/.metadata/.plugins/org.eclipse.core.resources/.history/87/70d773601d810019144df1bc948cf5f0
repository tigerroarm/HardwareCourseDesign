/*
 * touch.h
 *
 *  Created on: 2019年5月9日
 *      Author: lbl
 */

#ifndef TOUCH_H_
#define TOUCH_H_

#include <stdio.h>
#include <stdbool.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_irq.h"              // 中断

//触摸芯片型号：XPT2046

#define TP_PRES_DOWN 0x80  //触屏被按下
#define TP_CATH_PRES 0x40  //有按键按下了
#define CT_MAX_TOUCH  5    //电容屏支持的点数,固定为5点

//********************************define by liukaixin start******************
typedef struct
{
	alt_u16 pos_x;
	alt_u16 pos_y;
	bool touchComeFlag;
	bool touchLeaveFlag;
} TouchPos;


extern TouchPos touchPosInst;

//********************************define by liukaixin stop********************

//触摸屏控制器
typedef struct
{
	unsigned char (*init)(void);			//初始化触摸屏控制器
	unsigned char (*scan)(unsigned char);	//扫描触摸屏.0,屏幕扫描;1,物理坐标;
	unsigned short int x[CT_MAX_TOUCH]; 	//当前坐标
	unsigned short int y[CT_MAX_TOUCH];		//电容屏有最多5组坐标,电阻屏则用x[0],y[0]代表:此次扫描时,触屏的坐标,用
											//x[4],y[4]存储第一次按下时的坐标.
	unsigned char  sta;						//笔的状态
								//b7:按下1/松开0;
	                            //b6:0,没有按键按下;1,有按键按下.
								//b5:保留
								//b4~b0:电容触摸屏按下的点数(0,表示未按下,1表示按下)
/////////////////////触摸屏校准参数(电容屏不需要校准)//////////////////////
	float xfac;
	float yfac;
	short xoff;
	short yoff;
//新增的参数,当触摸屏的左右上下完全颠倒时需要用到.
//b0:0,竖屏(适合左右为X坐标,上下为Y坐标的TP)
//   1,横屏(适合左右为Y坐标,上下为X坐标的TP)
//b1~6:保留.
//b7:0,电阻屏
//   1,电容屏
	unsigned char touchtype;
}_m_tp_dev;

extern _m_tp_dev tp_dev;	 	//触屏控制器在touch.c里面定义

//电阻屏芯片连接引脚
/*
 * RT_MISO	msg[0]			RT_MOSI	ctrl[1]
 * RT_PEN	pen_intr[0]		RT_BUSY	msg[1]
 * RT_CS	ctrl[0]			RT_CLK	ctrl[2]
 */
#define RT_MISO_BASE 	TOUCH_MSG_BASE			//0x8201410
#define RT_PEN_BASE  	TOUCH_PEN_INTR_BASE   	//0x8201440
#define RT_CS_BASE		TOUCH_CTRL_BASE  		//0x8200060
#define RT_MOSI_BASE	TOUCH_CTRL_BASE  		//0x8200060
#define RT_BUSY_BASE	TOUCH_MSG_BASE			//0x8201410
#define RT_CLK_BASE		TOUCH_CTRL_BASE  		//0x8200060

void delay_us(int x);
void TP_Write_Byte(unsigned char num);						//向控制芯片写入一个数据
unsigned short int TP_Read_AD(unsigned char CMD);			//读取AD转换值
unsigned short int TP_Read_XOY(unsigned char xy);			//带滤波的坐标读取(X/Y)
unsigned char TP_Read_XY(unsigned short int *x,unsigned short int *y);		//双方向读取(X+Y)
unsigned char TP_Read_XY2(unsigned short int *x,unsigned short int *y);		//带加强滤波的双方向坐标读取
void TP_Save_Adjdata(void);								//保存校准参数
unsigned char TP_Get_Adjdata(void);						//读取校准参数
unsigned char TP_Scan(unsigned char tp);				//扫描
unsigned char TP_Init(void);							//初始化
void physical2logical(unsigned short xp, unsigned short yp, unsigned short* addx,  unsigned short* addy);//转换物理坐标到逻辑坐标
void intr_scan_headler(void* isr_context);	//中断的扫描函数
#endif /* TOUCH_H_ */
