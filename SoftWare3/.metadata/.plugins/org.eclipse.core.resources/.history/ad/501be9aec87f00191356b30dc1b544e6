/*
 * sdread.h
 *
 *  Created on: 2019年5月26日
 *      Author: 12757
 */

#ifndef SDREAD_H_
#define SDREAD_H_

#include <stddef.h>
#include <alt_types.h>
#include <sys/alt_dev.h>
#include <stdbool.h>


#ifdef __cplusplus
extern "C"
{
#endif /* __cplusplus */

/*
 * Device structure definition. Each instance of the driver uses one
 * of these structures to hold its associated state.
 */
typedef struct alt_up_sd_card_dev {
	/// @brief character mode device structure
	/// @sa Developing Device Drivers for the HAL in Nios II Software Developer's Handbook
	alt_dev dev;
	/// @brief the base address of the device
	unsigned int base;

} alt_up_sd_card_dev;


//////////////////////////////////////////////////////////////////////////
// HAL system functions

alt_up_sd_card_dev* alt_up_sd_card_open_dev(const char *name);
/* Open an SD Card Interface if it is connected to the system. */


bool alt_up_sd_card_is_Present(void);
/* Check if there is an SD Card insterted into the SD Card socket.
 */


bool alt_up_sd_card_is_FAT16(void);
/* This function reads the SD card data in an effort to determine if the card is formated as a FAT16
 * volume. Please note that FAT12 has a similar format, but will not be supported by this driver.
 */


short int alt_up_sd_card_fopen(char *name, bool create);
/* This function reads the SD card data in an effort to determine if the card is formated as a FAT16
 * volume. Please note that FAT12 has a similar format, but will not be supported by this driver.
 *
 * Inputs:
 *      name - a file name including a directory, relative to the root directory
 *      create - a flag set to true to create a file if it does not already exist
 * Output:
 *      An index to the file record assigned to the specified file. -1 is returned if the file could not be opened.
 */

bool alt_up_sd_card_fclose(short int file_handle);
// This function closes an opened file and saves data to SD Card if necessary.


//////////////////////////////////////////////////////////////////////////
// file-like operation functions

//////////////////////////////////////////////////////////////////////////
// direct operation functions


/*
 * Macros used by alt_sys_init
 */
#define ALTERA_UP_SD_CARD_AVALON_INTERFACE_INSTANCE(name, device)	\
  static alt_up_sd_card_dev device =		\
  {                                                 	\
    {                                               	\
      ALT_LLIST_ENTRY,                              	\
      name##_NAME,                                  	\
      NULL , /* open */		\
      NULL , /* close */		\
      NULL, /* read */		\
      NULL, /* write */		\
      NULL , /* lseek */		\
      NULL , /* fstat */		\
      NULL , /* ioctl */		\
    },                                              	\
	name##_BASE,                                	\
  }

#define ALTERA_UP_SD_CARD_AVALON_INTERFACE_INIT(name, device) \
{	\
    alt_dev_reg(&device.dev);                          	\
}


//读取文本内容，读取size个字节，放入缓存buffer
short int fread_txt( short int file_handle, alt_u8 *buffer, int size );

//fseek_txt的fromwhere类型
enum fseekType { SEEK_SET_TXT=0, SEEK_CUR_TXT=1, SEEK_END_TXT=2 };
//文本指针偏移
short int fseek_txt( short int file_handle, int offset, enum fseekType fromwhere);


#endif /* SDREAD_H_ */
